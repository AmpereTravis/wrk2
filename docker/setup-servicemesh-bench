#!/bin/ash
#
# Wrapper script around wrk service mesh benchmark
#

conn=10
rps=10
dur=60

[ -z "$1" -o "help" = "$1" -o "-h" = "$1" -o "--help" = "$1" ] && {
    echo "Usage:"
    echo "  docker run -ti quay.io/kinvolk/wrk2-srvmesh-bench \\" 
    echo "        [-c <num-of-concurrent-connections>] \\"
    echo "        [-r <num-of-requests-per-second>] \\"
    echo "        [-d <duration>] \\"
    echo "        [-T ] \\"
    echo "     http[s]://>service-1>/<endpoint-1> \\"
    echo "     http[s]://>service-1>/<endpoint-2> \\"
    echo "     http[s]://>service-2>/<endpoint-1> \\"
    echo "     http[s]://>service-2>/<endpoint-2> \\"
    echo "        ..."
    echo
    echo " -c <connections> - Number of concurrent connections. Default: $conn"
    echo " -r <rps> - Target rate of requests per second. Default: $rps"
    echo " -d <duration> - Test duration in seconds. Default: $dur"
    echo " -T - Report individual connections' stats during run. Default: off."
    echo
    exit
}

servers=""
per_thread_stats=0

i=1; next=""
for arg do
    [ "$arg" = "-c" ] &&  { next="conn"; continue; }
    [ "$arg" = "-r" ] &&  { next="rps"; continue; }
    [ "$arg" = "-d" ] &&  { next="dur"; continue; }
    [ "$arg" = "-T" ] &&  { [ -n "$next" ] && { echo "$next: Missing argument";
                                                exit 1; }
                            per_thread_stats=1; continue; }

    [ -n "$next" ] && { eval $next="$arg"; next=""; continue; }

    servers="$servers $arg"
done


echo "Running stresser with:"
echo "conn: $conn"
echo "rps: $rps"
echo "duration: $dur"
echo "servers: $servers"
echo "---"

sleep 1

unbuffer /usr/local/bin/wrk -s /usr/local/bin/multiple-endpoints-with-intermediate-status.lua \
                    --lua-dont-pass-body \
                    -L -R "$rps" -c "$conn" -t "$conn" -d "$dur" \
                    $servers \
    | awk -v threads="$conn" -v per_thread_stats="$per_thread_stats" '
           /\{"id":/ {
                c=c+1
                resp = resp + gensub(/.*"responses":([0-9]+).*/,"\\1",1)
                avg = avg + gensub(/.*"avg_thrd_rps":([0-9.]+).*/,"\\1",1)
                curr = curr + gensub(/.*"curr_thrd_rps":([0-9.]+).*/,"\\1",1)
                if (0 == per_thread_stats)
                    $0=""
            }
            {   if ("" != $0)
                    print $0
                if (c == threads) {
                    print "{\"id\":\"sum\",\"responses\":" resp \
                          ",\"avg_rps\":" avg \
                          ",\"curr_rps\": " curr "}"
                    c=0; avg=0; resp=0; curr=0
                } }'

